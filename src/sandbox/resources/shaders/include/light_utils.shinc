#include "utils.shinc"
#define NR_POINT_LIGHTS 8

struct Light
{
	float4 direction;
	float4 position;
	float4 color;
	float range;
	float intensity;
	matrix view;
	matrix projection;
};

cbuffer LightBuffer : register(b1)
{
	Light u_lights[NR_POINT_LIGHTS + 1];
};

cbuffer MaterialBuffer : register(b2)
{
	float u_shininess;
};

float Attenuation(float3 lightPosition, float3 fragPos, float attenuationRadius, float lightIntensity)
{
	float sqrlightDistance = pow(length(lightPosition - fragPos), 2);
	float attenuation = pow(max(1.0 - (sqrlightDistance / (attenuationRadius * attenuationRadius)), 0.0), 2);
	return attenuation * lightIntensity;
}

float2 SkyboxUV(float3 direction)
{
    float2 horDir = normalize(float2(direction.x, direction.z));
    return float2(1.0 - (atan2(horDir.y,horDir.x) / (2.0 * PI)), 1.0 - (acos(dot(float3(0.0, 1.0, 0.0), direction)) / PI));
}
